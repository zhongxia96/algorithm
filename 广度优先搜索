问题：有一个三维迷宫，每个迷宫的点都用三维坐标（x,y,z)表示。主人公每次行走只能走到上、下、左、右、前、后与主人公所在点相邻的位置，即从（x,y,z)点行走
至（x-1, y,z),(x+1,y,z),(x,y+1,z),(x,y-1,z),(x,y,z-1),(x,y,z+1)六个点中的其中一个。在这其中还存在一些墙，主人公在任何情况下都不能走到墙所在
的位置上。求从点（0，0，0）走到点（A-1，B-1，C-1）最少需要几步。

首先分析这个看似更加高级的查找问题。

查找空间：该题的查找空间中的元素不再是之前例题中的一个数或者几个数。它由所有从点（0，0，0）到点（A-1，B-1，C-1）合法的行走路径组成。
查找目标：在查找空间的所有路径中寻找一条最短的路径，即行走步数最少的路径。
查找方法：与以往相比，在广度优先搜索中的查找方法变得有些特殊，他不再机械的遍历查找空间中的所有路径，而是采用了某种策略。

在探讨这种特殊的查找方法之前，先指明该问题的状态。为了能够考虑搜索的问题，我们常在搜索问题中指明状态，从而使搜索问题变成对状态的搜索。在本问题中，由于
需要查找从起点到终点的最短耗时，设定状态（x,y,z,t)为四元祖，其中（x,y,z)为某个点的坐标，t为从（0，0，0）点走到该点所耗费的时间。在指明该问题的状态
之后，查找的几个相关要素也相应的发生改变。

查找空间：也被称为搜索空间，从之前的所有路径变为对所有状态的搜索，即所有可能出现的四元组（x,y,z,t)。
查找目标：也被称为搜索目标，即在所有的状态中搜索这样的一个四元组（x,y,z,t),其中x,y,z分别等于A-1，B-1，C-1，t为达到这个状态所需要的最少时间。
查找方法：通过状态的扩展来遍历查找所有的状态。

