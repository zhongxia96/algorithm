进制转换采用的和数位拆解类似的方法，下面给出一个将两个数a,b的和转换成m的进制的例子：输入格式为 m,a,b

需要注意的是，在这个例子中，两个数的和可能会超过int，所以采用long long的数据类型。


```
#include<iostream>
#include<queue>
#include<stdio.h>
#include<string>
#include<string.h>

using namespace std;


int main()
{
    long long m, a, b;
    int num[35];
    while(cin>>m){
        if(m==0)
            break;
        int a, b;
        cin>>a>>b;
        long long c = a+b;
        int loc = 0;
        while(c!=0){
            num[loc++]=c%m;
            c = c/m;
        }
        for(int i=loc-1;i>=0;i--)
            cout<<num[i];
        cout<<endl;
    }

    return 0;
}
```

下面给定一个a进制的数n，转换成一个b进制的数；输入顺序是a,n,b

思路：先转换成十进制的数，然后转换成b进制的数;
注意: 转换成b进制的数时，将while写在后面，考虑ans等于0的情况;
```
#include<iostream>
#include<queue>
#include<stdio.h>
#include<string>
#include<string.h>

using namespace std;


int main()
{
    int a, b;
    string n;
    cin>>a>>n>>b;
    int ans = 0;
    for(int i=0;i<n.length();i++){
        if(n[i]>='0' and n[i]<='9')
        {
            ans *= a;
            ans += (n[i]-'0');
        }
        else if(n[i]>='a' and n[i]<='f'){
            ans *= a;
            ans += (n[i]-'a')+10;
        }
        else if(n[i]>='A' and n[i]<='F'){
            ans *= a;
            ans += (n[i]-'A')+10;
        }
    }
    string res = "";
    do{
        int num = ans % b;
        if(num<=9)
            res = char(num+'0')+res;
        else
            res = char('A'+num-10)+res;
        ans /=b;
    }while(ans!=0);
    cout<<res<<endl;
    return 0;
}
```
