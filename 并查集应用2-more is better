题目大意是：有10000000个小朋友，他们之间有N对好朋友，且朋友关系具有传递性，若A与B是朋友，B与C是朋友，那么我们也认为A与C是朋友。
在给出这N段朋友关系之后，要求我们找出一个最大（人数最多）的集合，该集合中任意两人之间都是朋友或者该集合中只有一个人，输出该最大人数。

思路：可以使用并查集来求得几个符合这样条件的集合，但是并查集中没有涉及集合的数目；为了计算每个集合元素的个数，可以再表示每个集合的树的根节点
记录该集合所包含元素的个数，在合并时累加被合并的两个集合所包含元素的个数。最后，找出所有集合中包含元素最多的集合即为所求。

```
#include<iostream>
#include<queue>
#include<stdio.h>
#include<string>
#include<string.h>

using namespace std;

#define N 10000005

int Tree[N];
int Sum[N];

int findRoot(int x){
    if(Tree[x]==-1)
        return x;
    int tmp = findRoot(Tree[x]);
    Tree[x] = tmp;
    return tmp;
}

int main(){
    int m;
    while(cin>>m){
        for(int i =1;i<=N;i++){
            Tree[i]=-1;
            Sum[i]=1;
        }
        while(m--){
            int a,b;
            cin>>a>>b;
            a = findRoot(a);
            b = findRoot(b);
            if(a!=b){
                Tree[a] = b;
                Sum[b] += Sum[a];
            }
        }
        int ans = 1;
        for(int i=1;i<=N;i++)
            if(Sum[i]>ans)
                ans = Sum[i];
        cout<<ans<<endl;
    }
    return 0;

}
```

从本例中可以获得启发，在使用并查集的同时可以在表示集合的树的根节点保存其他格外信息，并且在集合的合并过程中维护该值，以便于求解某些集合的问题。
